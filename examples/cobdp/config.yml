#THIS FILE IS GENERATED BY OPENYAFF AT 2021-02-03 23:03:03.861095
#
#===============================================================================
#===============================================================================
#
#The configuration is divided into three parts:
#
#  yaff:
#      This section combines all settings related to the force field
#      generation in YAFF. The available keywords depend on the specific
#      system and force field.
#      For purely covalent and nonperiodic systems, all information on the
#      force field is contained in the parameter file and hence no additional
#      settings need to be specified here. In all other cases, this section
#      is nonempty and requires additional input from the user.
#
#
#  conversion:
#      This section combines settings related to the actual conversion
#      or to additional parameters that are required by OpenMM.
#
#
#  validations:
#      This section contains all information regarding the validation
#      procedure that should be performed after converting the force field.
#      Each type of validation (e.g. singlepoint) has its own set of
#      options explained below.
#
#===============================================================================
#===============================================================================



# CONVERSION
#
#        Below is a list of possible keywords for this section.
#
#        kind:
#            specifies the kind of conversion to apply. Currently, only
#            explicit conversions are supported.
#            (default: explicit)
#
#        pme_error_thres:
#            specifies the error threshold for the PME evaluation (only
#            relevant for periodic systems). For more information on the PME
#            evaluation, see openmm.org.
conversion:
  kind: explicit
  pme_error_thres: 1.0e-05



# VALIDATION
#
#        The validation generally consists of a series of individual validation
#        experiments. Each experiment (e.g. a single point or stress validation)
#        has its own keywords.
#
#        singlepoint:
#            performs a series of single point calculations on randomly generated
#            states, and compares forces and energies. Allowed keywords for this
#            experiment are:
#
#                tol:
#                    relative tolerance on energy and forces between YAFF and
#                    OpenMM.
#                    (default: 1e-5)
validations:
- kind: singlepoint
  platforms:
  - Reference
  separate_parts: true



# YAFF
#
#    Below is a list of possible keywords for this section. Their applicability
#    depends on the specific system (whether it is periodic, whether it contains
#    charges, ...). Some keywords that appear in the list below may therefore
#    not actually be valid for this specific configuration.
#
#    supercell:
#        determines the supercell to use. OpenMM does not allow interactions
#        to reach further than half the *shortest* cell vector in its reduced
#        representation. NOTE: THE SUPERCELL TUPLE REFERS TO THE CELL VECTORS
#        IN THE REDUCED REPRESENTATION, NOT TO THE ORIGINAL CELL VECTORS.
#        For most nanoporous materials and cutoff ranges (10 - 15 angstrom),
#        this implies that validation with OpenMM is almost always performed on
#        supercells of those in the .chk input.
#        By default, OpenYAFF will suggest the smallest possible unit cell that
#        is compatible with the default cutoff distance. Other supercells and
#        their corresponding largest cutoff distance are logged when executing
#        `openyaff configure`.
#        (see http://docs.openmm.org/latest/userguide/theory.html#periodic-boundary-conditions
#        for more information on the reduced cell representation in OpenMM).
#        )
#
#    rcut:
#        cutoff distance of the nonbonded interactions.
#        (default: 10 angstrom)
#
#    switch_width:
#        distance over which dispersion interactions are smoothed to 0.
#        (default: 4 angstrom)
#
#    tailcorrections:
#        whether to use tailcorrections for the dispersion interactions.
#        (default: False)
#
#    ewald_alphascale:
#        alpha scale parameter for the ewald summation in case of periodic
#        electrostatics. (see yaff.pes.generator.FFArgs for more information
#        and default values)
#
#    ewald_gcutscale:
#        gcut scale parameter for the ewald summation in case of periodic
#        electrostatics. (see yaff.pes.generator.FFArgs for more information
#        and default values)
yaff:
  ewald_alphascale: 3.5
  ewald_gcutscale: 1.1
  rcut: 10.0
  supercell:
  - 1
  - 3
  - 4
  switch_width: 4.0
  tailcorrections: false